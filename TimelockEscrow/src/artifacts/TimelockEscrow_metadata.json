{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "amountDeposited",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "buyer",
						"type": "address"
					}
				],
				"name": "buyerDeposit",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "buyerWithdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "createBuyOrder",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "seller",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "buyer",
						"type": "address"
					}
				],
				"name": "sellerWithdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "withdrawalTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"sellerWithdraw(address)": {
					"params": {
						"buyer": "has passed"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"buyerWithdraw()": {
					"notice": "allowa buyer to withdraw at anytime before the end of the escrow (3 days)"
				},
				"constructor": {
					"notice": "The goal of this exercise is to create a Time lock escrow. A buyer deposits ether into a contract, and the seller cannot withdraw it until 3 days passes. Before that, the buyer can take it back Assume the owner is the seller"
				},
				"createBuyOrder()": {
					"notice": "escrows msg.value for 3 days which buyer can withdraw at anytime before 3 days but afterwhich only seller can withdraw should revert if an active escrow still exist or last escrow hasn't been withdrawn"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"TimelockEscrow/src/TimelockEscrow.sol": "TimelockEscrow"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"TimelockEscrow/src/TimelockEscrow.sol": {
			"keccak256": "0x0e6aa72736765dd7ea1b5c122c8248994a0ea1c3f8ace1e92f90d248909747e0",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://bdd31e358582d703298f5cde01236e9b86e02bafd685959fb8e2200d8ebb0357",
				"dweb:/ipfs/QmctATpZa7THZzw2BJmaCNy9qzartwuFdPMrPUHMXfFJhj"
			]
		}
	},
	"version": 1
}