{
	"id": "26d6e50c508efdf6eed6e25ab70cedfb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"PriceIsRight/src/PriceIsRight.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.13;\n\ncontract PriceIsRight {\n    /// @dev make this function revert unless exactly 1 ether is sent as value in the function call\n    function buy() public payable {\n        require(msg.value == 1 ether, \"You should send 1 ether\");\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"PriceIsRight/src/PriceIsRight.sol": {
				"PriceIsRight": {
					"abi": [
						{
							"inputs": [],
							"name": "buy",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"buy()": {
								"details": "make this function revert unless exactly 1 ether is sent as value in the function call"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"PriceIsRight/src/PriceIsRight.sol\":63:296  contract PriceIsRight {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"PriceIsRight/src/PriceIsRight.sol\":63:296  contract PriceIsRight {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa6f2ae3a\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"PriceIsRight/src/PriceIsRight.sol\":191:294  function buy() public payable {... */\n    tag_2:\n      tag_3\n      tag_4\n      jump\t// in\n    tag_3:\n      stop\n    tag_4:\n        /* \"PriceIsRight/src/PriceIsRight.sol\":252:259  1 ether */\n      0x0de0b6b3a7640000\n        /* \"PriceIsRight/src/PriceIsRight.sol\":239:248  msg.value */\n      callvalue\n        /* \"PriceIsRight/src/PriceIsRight.sol\":239:259  msg.value == 1 ether */\n      eq\n        /* \"PriceIsRight/src/PriceIsRight.sol\":231:287  require(msg.value == 1 ether, \"You should send 1 ether\") */\n      tag_6\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_7\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_6:\n        /* \"PriceIsRight/src/PriceIsRight.sol\":191:294  function buy() public payable {... */\n      jump\t// out\n        /* \"#utility.yul\":7:176   */\n    tag_9:\n        /* \"#utility.yul\":91:102   */\n      0x00\n        /* \"#utility.yul\":125:131   */\n      dup3\n        /* \"#utility.yul\":120:123   */\n      dup3\n        /* \"#utility.yul\":113:132   */\n      mstore\n        /* \"#utility.yul\":165:169   */\n      0x20\n        /* \"#utility.yul\":160:163   */\n      dup3\n        /* \"#utility.yul\":156:170   */\n      add\n        /* \"#utility.yul\":141:170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":182:355   */\n    tag_10:\n        /* \"#utility.yul\":322:347   */\n      0x596f752073686f756c642073656e642031206574686572000000000000000000\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":306:320   */\n      add\n        /* \"#utility.yul\":299:348   */\n      mstore\n        /* \"#utility.yul\":182:355   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":361:727   */\n    tag_11:\n        /* \"#utility.yul\":503:506   */\n      0x00\n        /* \"#utility.yul\":524:591   */\n      tag_16\n        /* \"#utility.yul\":588:590   */\n      0x17\n        /* \"#utility.yul\":583:586   */\n      dup4\n        /* \"#utility.yul\":524:591   */\n      tag_9\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":517:591   */\n      swap2\n      pop\n        /* \"#utility.yul\":600:693   */\n      tag_17\n        /* \"#utility.yul\":689:692   */\n      dup3\n        /* \"#utility.yul\":600:693   */\n      tag_10\n      jump\t// in\n    tag_17:\n        /* \"#utility.yul\":718:720   */\n      0x20\n        /* \"#utility.yul\":713:716   */\n      dup3\n        /* \"#utility.yul\":709:721   */\n      add\n        /* \"#utility.yul\":702:721   */\n      swap1\n      pop\n        /* \"#utility.yul\":361:727   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":733:1152   */\n    tag_8:\n        /* \"#utility.yul\":899:903   */\n      0x00\n        /* \"#utility.yul\":937:939   */\n      0x20\n        /* \"#utility.yul\":926:935   */\n      dup3\n        /* \"#utility.yul\":922:940   */\n      add\n        /* \"#utility.yul\":914:940   */\n      swap1\n      pop\n        /* \"#utility.yul\":986:995   */\n      dup2\n        /* \"#utility.yul\":980:984   */\n      dup2\n        /* \"#utility.yul\":976:996   */\n      sub\n        /* \"#utility.yul\":972:973   */\n      0x00\n        /* \"#utility.yul\":961:970   */\n      dup4\n        /* \"#utility.yul\":957:974   */\n      add\n        /* \"#utility.yul\":950:997   */\n      mstore\n        /* \"#utility.yul\":1014:1145   */\n      tag_19\n        /* \"#utility.yul\":1140:1144   */\n      dup2\n        /* \"#utility.yul\":1014:1145   */\n      tag_11\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":1006:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":733:1152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220574e49785d4578fa317a3f736f81f25c072634df46e1fc586a54a6477720b65b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506101188061001c5f395ff3fe608060405260043610601b575f3560e01c8063a6f2ae3a14601f575b5f80fd5b60256027565b005b670de0b6b3a76400003414606e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040160659060c6565b60405180910390fd5b565b5f82825260208201905092915050565b7f596f752073686f756c642073656e6420312065746865720000000000000000005f82015250565b5f60b26017836070565b915060bb826080565b602082019050919050565b5f6020820190508181035f83015260db8160a8565b905091905056fea2646970667358221220574e49785d4578fa317a3f736f81f25c072634df46e1fc586a54a6477720b65b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA6F2AE3A EQ PUSH1 0x1F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x25 PUSH1 0x27 JUMP JUMPDEST STOP JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE EQ PUSH1 0x6E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x65 SWAP1 PUSH1 0xC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752073686F756C642073656E642031206574686572000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0xB2 PUSH1 0x17 DUP4 PUSH1 0x70 JUMP JUMPDEST SWAP2 POP PUSH1 0xBB DUP3 PUSH1 0x80 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH1 0xDB DUP2 PUSH1 0xA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI 0x4E BLOBHASH PUSH25 0x5D4578FA317A3F736F81F25C072634DF46E1FC586A54A64777 KECCAK256 0xB6 JUMPDEST PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "63:233:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@buy_14": {
									"entryPoint": 39,
									"id": 14,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c073e0ebc95ac6d1ada30b44cbb55c06d3c4b52e3ea59aaf869317ccbffa545d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c073e0ebc95ac6d1ada30b44cbb55c06d3c4b52e3ea59aaf869317ccbffa545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"store_literal_in_memory_c073e0ebc95ac6d1ada30b44cbb55c06d3c4b52e3ea59aaf869317ccbffa545d": {
									"entryPoint": 128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1155:1",
										"nodeType": "YulBlock",
										"src": "0:1155:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "103:73:1",
													"nodeType": "YulBlock",
													"src": "103:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "120:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "125:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "113:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:1"
																},
																"nativeSrc": "113:19:1",
																"nodeType": "YulFunctionCall",
																"src": "113:19:1"
															},
															"nativeSrc": "113:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "113:19:1"
														},
														{
															"nativeSrc": "141:29:1",
															"nodeType": "YulAssignment",
															"src": "141:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "160:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "165:4:1",
																		"nodeType": "YulLiteral",
																		"src": "165:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "156:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:1"
																},
																"nativeSrc": "156:14:1",
																"nodeType": "YulFunctionCall",
																"src": "156:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "141:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "75:3:1",
														"nodeType": "YulTypedName",
														"src": "75:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "80:6:1",
														"nodeType": "YulTypedName",
														"src": "80:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "91:11:1",
														"nodeType": "YulTypedName",
														"src": "91:11:1",
														"type": ""
													}
												],
												"src": "7:169:1"
											},
											{
												"body": {
													"nativeSrc": "288:67:1",
													"nodeType": "YulBlock",
													"src": "288:67:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "310:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "318:1:1",
																				"nodeType": "YulLiteral",
																				"src": "318:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "306:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:1"
																		},
																		"nativeSrc": "306:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:1"
																	},
																	{
																		"hexValue": "596f752073686f756c642073656e642031206574686572",
																		"kind": "string",
																		"nativeSrc": "322:25:1",
																		"nodeType": "YulLiteral",
																		"src": "322:25:1",
																		"type": "",
																		"value": "You should send 1 ether"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "299:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:1"
																},
																"nativeSrc": "299:49:1",
																"nodeType": "YulFunctionCall",
																"src": "299:49:1"
															},
															"nativeSrc": "299:49:1",
															"nodeType": "YulExpressionStatement",
															"src": "299:49:1"
														}
													]
												},
												"name": "store_literal_in_memory_c073e0ebc95ac6d1ada30b44cbb55c06d3c4b52e3ea59aaf869317ccbffa545d",
												"nativeSrc": "182:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "280:6:1",
														"nodeType": "YulTypedName",
														"src": "280:6:1",
														"type": ""
													}
												],
												"src": "182:173:1"
											},
											{
												"body": {
													"nativeSrc": "507:220:1",
													"nodeType": "YulBlock",
													"src": "507:220:1",
													"statements": [
														{
															"nativeSrc": "517:74:1",
															"nodeType": "YulAssignment",
															"src": "517:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "583:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "583:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "588:2:1",
																		"nodeType": "YulLiteral",
																		"src": "588:2:1",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "524:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "524:58:1"
																},
																"nativeSrc": "524:67:1",
																"nodeType": "YulFunctionCall",
																"src": "524:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "517:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "517:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "689:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "689:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c073e0ebc95ac6d1ada30b44cbb55c06d3c4b52e3ea59aaf869317ccbffa545d",
																	"nativeSrc": "600:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "600:88:1"
																},
																"nativeSrc": "600:93:1",
																"nodeType": "YulFunctionCall",
																"src": "600:93:1"
															},
															"nativeSrc": "600:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "600:93:1"
														},
														{
															"nativeSrc": "702:19:1",
															"nodeType": "YulAssignment",
															"src": "702:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "713:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "713:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "718:2:1",
																		"nodeType": "YulLiteral",
																		"src": "718:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "709:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "709:3:1"
																},
																"nativeSrc": "709:12:1",
																"nodeType": "YulFunctionCall",
																"src": "709:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "702:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "702:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c073e0ebc95ac6d1ada30b44cbb55c06d3c4b52e3ea59aaf869317ccbffa545d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "361:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "495:3:1",
														"nodeType": "YulTypedName",
														"src": "495:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "503:3:1",
														"nodeType": "YulTypedName",
														"src": "503:3:1",
														"type": ""
													}
												],
												"src": "361:366:1"
											},
											{
												"body": {
													"nativeSrc": "904:248:1",
													"nodeType": "YulBlock",
													"src": "904:248:1",
													"statements": [
														{
															"nativeSrc": "914:26:1",
															"nodeType": "YulAssignment",
															"src": "914:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "926:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "926:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "937:2:1",
																		"nodeType": "YulLiteral",
																		"src": "937:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "922:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "922:3:1"
																},
																"nativeSrc": "922:18:1",
																"nodeType": "YulFunctionCall",
																"src": "922:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "914:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "914:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "961:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "961:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "972:1:1",
																				"nodeType": "YulLiteral",
																				"src": "972:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "957:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "957:3:1"
																		},
																		"nativeSrc": "957:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "957:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "980:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "980:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "986:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "986:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "976:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "976:3:1"
																		},
																		"nativeSrc": "976:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "976:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "950:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "950:6:1"
																},
																"nativeSrc": "950:47:1",
																"nodeType": "YulFunctionCall",
																"src": "950:47:1"
															},
															"nativeSrc": "950:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "950:47:1"
														},
														{
															"nativeSrc": "1006:139:1",
															"nodeType": "YulAssignment",
															"src": "1006:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "1140:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1140:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c073e0ebc95ac6d1ada30b44cbb55c06d3c4b52e3ea59aaf869317ccbffa545d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1014:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "1014:124:1"
																},
																"nativeSrc": "1014:131:1",
																"nodeType": "YulFunctionCall",
																"src": "1014:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1006:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1006:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c073e0ebc95ac6d1ada30b44cbb55c06d3c4b52e3ea59aaf869317ccbffa545d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "733:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "884:9:1",
														"nodeType": "YulTypedName",
														"src": "884:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "899:4:1",
														"nodeType": "YulTypedName",
														"src": "899:4:1",
														"type": ""
													}
												],
												"src": "733:419:1"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c073e0ebc95ac6d1ada30b44cbb55c06d3c4b52e3ea59aaf869317ccbffa545d(memPtr) {\n\n        mstore(add(memPtr, 0), \"You should send 1 ether\")\n\n    }\n\n    function abi_encode_t_stringliteral_c073e0ebc95ac6d1ada30b44cbb55c06d3c4b52e3ea59aaf869317ccbffa545d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_c073e0ebc95ac6d1ada30b44cbb55c06d3c4b52e3ea59aaf869317ccbffa545d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c073e0ebc95ac6d1ada30b44cbb55c06d3c4b52e3ea59aaf869317ccbffa545d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c073e0ebc95ac6d1ada30b44cbb55c06d3c4b52e3ea59aaf869317ccbffa545d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610601b575f3560e01c8063a6f2ae3a14601f575b5f80fd5b60256027565b005b670de0b6b3a76400003414606e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040160659060c6565b60405180910390fd5b565b5f82825260208201905092915050565b7f596f752073686f756c642073656e6420312065746865720000000000000000005f82015250565b5f60b26017836070565b915060bb826080565b602082019050919050565b5f6020820190508181035f83015260db8160a8565b905091905056fea2646970667358221220574e49785d4578fa317a3f736f81f25c072634df46e1fc586a54a6477720b65b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA6F2AE3A EQ PUSH1 0x1F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x25 PUSH1 0x27 JUMP JUMPDEST STOP JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE EQ PUSH1 0x6E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x65 SWAP1 PUSH1 0xC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752073686F756C642073656E642031206574686572000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0xB2 PUSH1 0x17 DUP4 PUSH1 0x70 JUMP JUMPDEST SWAP2 POP PUSH1 0xBB DUP3 PUSH1 0x80 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH1 0xDB DUP2 PUSH1 0xA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI 0x4E BLOBHASH PUSH25 0x5D4578FA317A3F736F81F25C072634DF46E1FC586A54A64777 KECCAK256 0xB6 JUMPDEST PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "63:233:0:-:0;;;;;;;;;;;;;;;;;;;;;191:103;;;:::i;:::-;;;252:7;239:9;:20;231:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;191:103::o;7:169:1:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:173::-;322:25;318:1;310:6;306:14;299:49;182:173;:::o;361:366::-;503:3;524:67;588:2;583:3;524:67;:::i;:::-;517:74;;600:93;689:3;600:93;:::i;:::-;718:2;713:3;709:12;702:19;;361:366;;;:::o;733:419::-;899:4;937:2;926:9;922:18;914:26;;986:9;980:4;976:20;972:1;961:9;957:17;950:47;1014:131;1140:4;1014:131;:::i;:::-;1006:139;;733:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "56000",
								"executionCost": "103",
								"totalCost": "56103"
							},
							"external": {
								"buy()": "403"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 63,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 63,
									"end": 296,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 63,
									"end": 296,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 63,
									"end": 296,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 296,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 63,
									"end": 296,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 296,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 63,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 296,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 296,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 63,
									"end": 296,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 296,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 63,
									"end": 296,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63,
									"end": 296,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 296,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 296,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 296,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 63,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 296,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220574e49785d4578fa317a3f736f81f25c072634df46e1fc586a54a6477720b65b64736f6c634300081a0033",
									".code": [
										{
											"begin": 63,
											"end": 296,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63,
											"end": 296,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 296,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 63,
											"end": 296,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "PUSH",
											"source": 0,
											"value": "A6F2AE3A"
										},
										{
											"begin": 63,
											"end": 296,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 191,
											"end": 294,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 191,
											"end": 294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 191,
											"end": 294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 191,
											"end": 294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 191,
											"end": 294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 191,
											"end": 294,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 191,
											"end": 294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 191,
											"end": 294,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 191,
											"end": 294,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 191,
											"end": 294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 252,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 239,
											"end": 248,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 239,
											"end": 259,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 231,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 231,
											"end": 287,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 231,
											"end": 287,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 231,
											"end": 287,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 231,
											"end": 287,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 231,
											"end": 287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 231,
											"end": 287,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 231,
											"end": 287,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 231,
											"end": 287,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 231,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 231,
											"end": 287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 231,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 231,
											"end": 287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 231,
											"end": 287,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 231,
											"end": 287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 231,
											"end": 287,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 231,
											"end": 287,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 231,
											"end": 287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 231,
											"end": 287,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 231,
											"end": 287,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 231,
											"end": 287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 231,
											"end": 287,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 231,
											"end": 287,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 231,
											"end": 287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 191,
											"end": 294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 176,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 91,
											"end": 102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 131,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 120,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 113,
											"end": 132,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 156,
											"end": 170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 141,
											"end": 170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 141,
											"end": 170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 182,
											"end": 355,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 182,
											"end": 355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 322,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "596F752073686F756C642073656E642031206574686572000000000000000000"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 306,
											"end": 320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 299,
											"end": 348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 182,
											"end": 355,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 182,
											"end": 355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 361,
											"end": 727,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 361,
											"end": 727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 588,
											"end": 590,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 583,
											"end": 586,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 524,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 524,
											"end": 591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 524,
											"end": 591,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 524,
											"end": 591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 517,
											"end": 591,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 517,
											"end": 591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 600,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 689,
											"end": 692,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 600,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 600,
											"end": 693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 600,
											"end": 693,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 600,
											"end": 693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 718,
											"end": 720,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 713,
											"end": 716,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 709,
											"end": 721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 702,
											"end": 721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 702,
											"end": 721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 361,
											"end": 727,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 361,
											"end": 727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 361,
											"end": 727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 361,
											"end": 727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 733,
											"end": 1152,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 733,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 899,
											"end": 903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 939,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 926,
											"end": 935,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 922,
											"end": 940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 914,
											"end": 940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 914,
											"end": 940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 986,
											"end": 995,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 980,
											"end": 984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 976,
											"end": 996,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 972,
											"end": 973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 957,
											"end": 974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 950,
											"end": 997,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1140,
											"end": 1144,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1014,
											"end": 1145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 1145,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1014,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 733,
											"end": 1152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 733,
											"end": 1152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 733,
											"end": 1152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 733,
											"end": 1152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"PriceIsRight/src/PriceIsRight.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buy()": "a6f2ae3a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"buy()\":{\"details\":\"make this function revert unless exactly 1 ether is sent as value in the function call\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PriceIsRight/src/PriceIsRight.sol\":\"PriceIsRight\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PriceIsRight/src/PriceIsRight.sol\":{\"keccak256\":\"0x4ddbce314aa206da421d4854901648be6765aa9f962d392952a1942c4b0e9008\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://55aba751a0744a60d1e258d030e52f83051dd3f095147b9782ca1d47ba3609cf\",\"dweb:/ipfs/QmcoiGAZbCXbuCKF44yjS2srmSYbHWQ4WCFZ4rtaEqbnCZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"PriceIsRight/src/PriceIsRight.sol": {
				"ast": {
					"absolutePath": "PriceIsRight/src/PriceIsRight.sol",
					"exportedSymbols": {
						"PriceIsRight": [
							15
						]
					},
					"id": 16,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PriceIsRight",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 15,
							"linearizedBaseContracts": [
								15
							],
							"name": "PriceIsRight",
							"nameLocation": "72:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 13,
										"nodeType": "Block",
										"src": "221:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 6,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "239:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 7,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "243:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "239:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 8,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "252:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"src": "239:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752073686f756c642073656e642031206574686572",
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "261:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c073e0ebc95ac6d1ada30b44cbb55c06d3c4b52e3ea59aaf869317ccbffa545d",
																"typeString": "literal_string \"You should send 1 ether\""
															},
															"value": "You should send 1 ether"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c073e0ebc95ac6d1ada30b44cbb55c06d3c4b52e3ea59aaf869317ccbffa545d",
																"typeString": "literal_string \"You should send 1 ether\""
															}
														],
														"id": 5,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "231:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "231:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 12,
												"nodeType": "ExpressionStatement",
												"src": "231:56:0"
											}
										]
									},
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "91:95:0",
										"text": "@dev make this function revert unless exactly 1 ether is sent as value in the function call"
									},
									"functionSelector": "a6f2ae3a",
									"id": 14,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buy",
									"nameLocation": "200:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "203:2:0"
									},
									"returnParameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "221:0:0"
									},
									"scope": 15,
									"src": "191:103:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 16,
							"src": "63:233:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:260:0"
				},
				"id": 0
			}
		}
	}
}