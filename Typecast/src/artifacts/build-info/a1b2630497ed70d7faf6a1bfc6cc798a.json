{
	"id": "a1b2630497ed70d7faf6a1bfc6cc798a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Typecast/src/Typecast.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.13;\n\ncontract Typecast {\n    /**\n     * the goal of this exercise is to pass if msg.value is equal to the address of this contract or revert otherwise\n     */\n\n    function typeCast() external payable {\n        require(msg.value == uint256(uint160(address(this))), \"msg.value should be equal the contract address\");\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Typecast/src/Typecast.sol": {
				"Typecast": {
					"abi": [
						{
							"inputs": [],
							"name": "typeCast",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Typecast/src/Typecast.sol\":63:381  contract Typecast {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Typecast/src/Typecast.sol\":63:381  contract Typecast {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x12e9b56d\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Typecast/src/Typecast.sol\":222:379  function typeCast() external payable {... */\n    tag_2:\n      tag_3\n      tag_4\n      jump\t// in\n    tag_3:\n      stop\n    tag_4:\n        /* \"Typecast/src/Typecast.sol\":314:318  this */\n      address\n        /* \"Typecast/src/Typecast.sol\":290:321  uint256(uint160(address(this))) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Typecast/src/Typecast.sol\":277:286  msg.value */\n      callvalue\n        /* \"Typecast/src/Typecast.sol\":277:321  msg.value == uint256(uint160(address(this))) */\n      eq\n        /* \"Typecast/src/Typecast.sol\":269:372  require(msg.value == uint256(uint160(address(this))), \"msg.value should be equal the contract address\") */\n      tag_6\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_7\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_6:\n        /* \"Typecast/src/Typecast.sol\":222:379  function typeCast() external payable {... */\n      jump\t// out\n        /* \"#utility.yul\":7:176   */\n    tag_9:\n        /* \"#utility.yul\":91:102   */\n      0x00\n        /* \"#utility.yul\":125:131   */\n      dup3\n        /* \"#utility.yul\":120:123   */\n      dup3\n        /* \"#utility.yul\":113:132   */\n      mstore\n        /* \"#utility.yul\":165:169   */\n      0x20\n        /* \"#utility.yul\":160:163   */\n      dup3\n        /* \"#utility.yul\":156:170   */\n      add\n        /* \"#utility.yul\":141:170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":182:415   */\n    tag_10:\n        /* \"#utility.yul\":322:356   */\n      0x6d73672e76616c75652073686f756c6420626520657175616c2074686520636f\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":306:320   */\n      add\n        /* \"#utility.yul\":299:357   */\n      mstore\n        /* \"#utility.yul\":391:407   */\n      0x6e74726163742061646472657373000000000000000000000000000000000000\n        /* \"#utility.yul\":386:388   */\n      0x20\n        /* \"#utility.yul\":378:384   */\n      dup3\n        /* \"#utility.yul\":374:389   */\n      add\n        /* \"#utility.yul\":367:408   */\n      mstore\n        /* \"#utility.yul\":182:415   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":421:787   */\n    tag_11:\n        /* \"#utility.yul\":563:566   */\n      0x00\n        /* \"#utility.yul\":584:651   */\n      tag_16\n        /* \"#utility.yul\":648:650   */\n      0x2e\n        /* \"#utility.yul\":643:646   */\n      dup4\n        /* \"#utility.yul\":584:651   */\n      tag_9\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":577:651   */\n      swap2\n      pop\n        /* \"#utility.yul\":660:753   */\n      tag_17\n        /* \"#utility.yul\":749:752   */\n      dup3\n        /* \"#utility.yul\":660:753   */\n      tag_10\n      jump\t// in\n    tag_17:\n        /* \"#utility.yul\":778:780   */\n      0x40\n        /* \"#utility.yul\":773:776   */\n      dup3\n        /* \"#utility.yul\":769:781   */\n      add\n        /* \"#utility.yul\":762:781   */\n      swap1\n      pop\n        /* \"#utility.yul\":421:787   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":793:1212   */\n    tag_8:\n        /* \"#utility.yul\":959:963   */\n      0x00\n        /* \"#utility.yul\":997:999   */\n      0x20\n        /* \"#utility.yul\":986:995   */\n      dup3\n        /* \"#utility.yul\":982:1000   */\n      add\n        /* \"#utility.yul\":974:1000   */\n      swap1\n      pop\n        /* \"#utility.yul\":1046:1055   */\n      dup2\n        /* \"#utility.yul\":1040:1044   */\n      dup2\n        /* \"#utility.yul\":1036:1056   */\n      sub\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1021:1030   */\n      dup4\n        /* \"#utility.yul\":1017:1034   */\n      add\n        /* \"#utility.yul\":1010:1057   */\n      mstore\n        /* \"#utility.yul\":1074:1205   */\n      tag_19\n        /* \"#utility.yul\":1200:1204   */\n      dup2\n        /* \"#utility.yul\":1074:1205   */\n      tag_11\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":1066:1205   */\n      swap1\n      pop\n        /* \"#utility.yul\":793:1212   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d015c49d38364ed556df0d30157157fa700462bb953689cac54ab4f67aa5267264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506101598061001c5f395ff3fe60806040526004361061001d575f3560e01c806312e9b56d14610021575b5f80fd5b61002961002b565b005b3073ffffffffffffffffffffffffffffffffffffffff163414610083576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161007a90610105565b60405180910390fd5b565b5f82825260208201905092915050565b7f6d73672e76616c75652073686f756c6420626520657175616c2074686520636f5f8201527f6e74726163742061646472657373000000000000000000000000000000000000602082015250565b5f6100ef602e83610085565b91506100fa82610095565b604082019050919050565b5f6020820190508181035f83015261011c816100e3565b905091905056fea2646970667358221220d015c49d38364ed556df0d30157157fa700462bb953689cac54ab4f67aa5267264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12E9B56D EQ PUSH2 0x21 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x29 PUSH2 0x2B JUMP JUMPDEST STOP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE EQ PUSH2 0x83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A SWAP1 PUSH2 0x105 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6D73672E76616C75652073686F756C6420626520657175616C2074686520636F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E74726163742061646472657373000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEF PUSH1 0x2E DUP4 PUSH2 0x85 JUMP JUMPDEST SWAP2 POP PUSH2 0xFA DUP3 PUSH2 0x95 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11C DUP2 PUSH2 0xE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 ISZERO 0xC4 SWAP14 CODESIZE CALLDATASIZE 0x4E 0xD5 JUMP 0xDF 0xD ADDRESS ISZERO PUSH18 0x57FA700462BB953689CAC54AB4F67AA52672 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "63:318:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@typeCast_23": {
									"entryPoint": 43,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_9031812611b01dc14ee1edb17ab8b09bf508fb80385d69ae69b7e95e3ff85078_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9031812611b01dc14ee1edb17ab8b09bf508fb80385d69ae69b7e95e3ff85078__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"store_literal_in_memory_9031812611b01dc14ee1edb17ab8b09bf508fb80385d69ae69b7e95e3ff85078": {
									"entryPoint": 149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1215:1",
										"nodeType": "YulBlock",
										"src": "0:1215:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "103:73:1",
													"nodeType": "YulBlock",
													"src": "103:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "120:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "125:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "113:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:1"
																},
																"nativeSrc": "113:19:1",
																"nodeType": "YulFunctionCall",
																"src": "113:19:1"
															},
															"nativeSrc": "113:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "113:19:1"
														},
														{
															"nativeSrc": "141:29:1",
															"nodeType": "YulAssignment",
															"src": "141:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "160:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "165:4:1",
																		"nodeType": "YulLiteral",
																		"src": "165:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "156:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:1"
																},
																"nativeSrc": "156:14:1",
																"nodeType": "YulFunctionCall",
																"src": "156:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "141:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "75:3:1",
														"nodeType": "YulTypedName",
														"src": "75:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "80:6:1",
														"nodeType": "YulTypedName",
														"src": "80:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "91:11:1",
														"nodeType": "YulTypedName",
														"src": "91:11:1",
														"type": ""
													}
												],
												"src": "7:169:1"
											},
											{
												"body": {
													"nativeSrc": "288:127:1",
													"nodeType": "YulBlock",
													"src": "288:127:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "310:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "318:1:1",
																				"nodeType": "YulLiteral",
																				"src": "318:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "306:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:1"
																		},
																		"nativeSrc": "306:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:1"
																	},
																	{
																		"hexValue": "6d73672e76616c75652073686f756c6420626520657175616c2074686520636f",
																		"kind": "string",
																		"nativeSrc": "322:34:1",
																		"nodeType": "YulLiteral",
																		"src": "322:34:1",
																		"type": "",
																		"value": "msg.value should be equal the co"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "299:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:1"
																},
																"nativeSrc": "299:58:1",
																"nodeType": "YulFunctionCall",
																"src": "299:58:1"
															},
															"nativeSrc": "299:58:1",
															"nodeType": "YulExpressionStatement",
															"src": "299:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "378:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "378:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "386:2:1",
																				"nodeType": "YulLiteral",
																				"src": "386:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "374:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "374:3:1"
																		},
																		"nativeSrc": "374:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "374:15:1"
																	},
																	{
																		"hexValue": "6e74726163742061646472657373",
																		"kind": "string",
																		"nativeSrc": "391:16:1",
																		"nodeType": "YulLiteral",
																		"src": "391:16:1",
																		"type": "",
																		"value": "ntract address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "367:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "367:6:1"
																},
																"nativeSrc": "367:41:1",
																"nodeType": "YulFunctionCall",
																"src": "367:41:1"
															},
															"nativeSrc": "367:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "367:41:1"
														}
													]
												},
												"name": "store_literal_in_memory_9031812611b01dc14ee1edb17ab8b09bf508fb80385d69ae69b7e95e3ff85078",
												"nativeSrc": "182:233:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "280:6:1",
														"nodeType": "YulTypedName",
														"src": "280:6:1",
														"type": ""
													}
												],
												"src": "182:233:1"
											},
											{
												"body": {
													"nativeSrc": "567:220:1",
													"nodeType": "YulBlock",
													"src": "567:220:1",
													"statements": [
														{
															"nativeSrc": "577:74:1",
															"nodeType": "YulAssignment",
															"src": "577:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "643:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "643:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "648:2:1",
																		"nodeType": "YulLiteral",
																		"src": "648:2:1",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "584:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "584:58:1"
																},
																"nativeSrc": "584:67:1",
																"nodeType": "YulFunctionCall",
																"src": "584:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "577:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "577:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "749:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "749:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9031812611b01dc14ee1edb17ab8b09bf508fb80385d69ae69b7e95e3ff85078",
																	"nativeSrc": "660:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "660:88:1"
																},
																"nativeSrc": "660:93:1",
																"nodeType": "YulFunctionCall",
																"src": "660:93:1"
															},
															"nativeSrc": "660:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "660:93:1"
														},
														{
															"nativeSrc": "762:19:1",
															"nodeType": "YulAssignment",
															"src": "762:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "773:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "773:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "778:2:1",
																		"nodeType": "YulLiteral",
																		"src": "778:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "769:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nativeSrc": "769:12:1",
																"nodeType": "YulFunctionCall",
																"src": "769:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "762:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9031812611b01dc14ee1edb17ab8b09bf508fb80385d69ae69b7e95e3ff85078_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "421:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "555:3:1",
														"nodeType": "YulTypedName",
														"src": "555:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "563:3:1",
														"nodeType": "YulTypedName",
														"src": "563:3:1",
														"type": ""
													}
												],
												"src": "421:366:1"
											},
											{
												"body": {
													"nativeSrc": "964:248:1",
													"nodeType": "YulBlock",
													"src": "964:248:1",
													"statements": [
														{
															"nativeSrc": "974:26:1",
															"nodeType": "YulAssignment",
															"src": "974:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "986:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "986:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "997:2:1",
																		"nodeType": "YulLiteral",
																		"src": "997:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "982:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "982:3:1"
																},
																"nativeSrc": "982:18:1",
																"nodeType": "YulFunctionCall",
																"src": "982:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "974:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "974:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1021:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1021:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1032:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1032:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1017:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1017:3:1"
																		},
																		"nativeSrc": "1017:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1017:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1040:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1040:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1046:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1046:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1036:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1036:3:1"
																		},
																		"nativeSrc": "1036:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1010:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1010:6:1"
																},
																"nativeSrc": "1010:47:1",
																"nodeType": "YulFunctionCall",
																"src": "1010:47:1"
															},
															"nativeSrc": "1010:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "1010:47:1"
														},
														{
															"nativeSrc": "1066:139:1",
															"nodeType": "YulAssignment",
															"src": "1066:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "1200:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1200:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9031812611b01dc14ee1edb17ab8b09bf508fb80385d69ae69b7e95e3ff85078_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1074:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "1074:124:1"
																},
																"nativeSrc": "1074:131:1",
																"nodeType": "YulFunctionCall",
																"src": "1074:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1066:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1066:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9031812611b01dc14ee1edb17ab8b09bf508fb80385d69ae69b7e95e3ff85078__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "793:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "944:9:1",
														"nodeType": "YulTypedName",
														"src": "944:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "959:4:1",
														"nodeType": "YulTypedName",
														"src": "959:4:1",
														"type": ""
													}
												],
												"src": "793:419:1"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9031812611b01dc14ee1edb17ab8b09bf508fb80385d69ae69b7e95e3ff85078(memPtr) {\n\n        mstore(add(memPtr, 0), \"msg.value should be equal the co\")\n\n        mstore(add(memPtr, 32), \"ntract address\")\n\n    }\n\n    function abi_encode_t_stringliteral_9031812611b01dc14ee1edb17ab8b09bf508fb80385d69ae69b7e95e3ff85078_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_9031812611b01dc14ee1edb17ab8b09bf508fb80385d69ae69b7e95e3ff85078(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9031812611b01dc14ee1edb17ab8b09bf508fb80385d69ae69b7e95e3ff85078__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9031812611b01dc14ee1edb17ab8b09bf508fb80385d69ae69b7e95e3ff85078_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061001d575f3560e01c806312e9b56d14610021575b5f80fd5b61002961002b565b005b3073ffffffffffffffffffffffffffffffffffffffff163414610083576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161007a90610105565b60405180910390fd5b565b5f82825260208201905092915050565b7f6d73672e76616c75652073686f756c6420626520657175616c2074686520636f5f8201527f6e74726163742061646472657373000000000000000000000000000000000000602082015250565b5f6100ef602e83610085565b91506100fa82610095565b604082019050919050565b5f6020820190508181035f83015261011c816100e3565b905091905056fea2646970667358221220d015c49d38364ed556df0d30157157fa700462bb953689cac54ab4f67aa5267264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12E9B56D EQ PUSH2 0x21 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x29 PUSH2 0x2B JUMP JUMPDEST STOP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE EQ PUSH2 0x83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A SWAP1 PUSH2 0x105 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6D73672E76616C75652073686F756C6420626520657175616C2074686520636F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E74726163742061646472657373000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEF PUSH1 0x2E DUP4 PUSH2 0x85 JUMP JUMPDEST SWAP2 POP PUSH2 0xFA DUP3 PUSH2 0x95 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11C DUP2 PUSH2 0xE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 ISZERO 0xC4 SWAP14 CODESIZE CALLDATASIZE 0x4E 0xD5 JUMP 0xDF 0xD ADDRESS ISZERO PUSH18 0x57FA700462BB953689CAC54AB4F67AA52672 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "63:318:0:-:0;;;;;;;;;;;;;;;;;;;;;222:157;;;:::i;:::-;;;314:4;290:31;;277:9;:44;269:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;222:157::o;7:169:1:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:233::-;322:34;318:1;310:6;306:14;299:58;391:16;386:2;378:6;374:15;367:41;182:233;:::o;421:366::-;563:3;584:67;648:2;643:3;584:67;:::i;:::-;577:74;;660:93;749:3;660:93;:::i;:::-;778:2;773:3;769:12;762:19;;421:366;;;:::o;793:419::-;959:4;997:2;986:9;982:18;974:26;;1046:9;1040:4;1036:20;1032:1;1021:9;1017:17;1010:47;1074:131;1200:4;1074:131;:::i;:::-;1066:139;;793:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "69000",
								"executionCost": "115",
								"totalCost": "69115"
							},
							"external": {
								"typeCast()": "426"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 381,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 63,
									"end": 381,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 63,
									"end": 381,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 63,
									"end": 381,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 63,
									"end": 381,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 381,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 63,
									"end": 381,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 381,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 63,
									"end": 381,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 381,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 381,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 63,
									"end": 381,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 381,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 63,
									"end": 381,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63,
									"end": 381,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 381,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 381,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 381,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 381,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 63,
									"end": 381,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 381,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d015c49d38364ed556df0d30157157fa700462bb953689cac54ab4f67aa5267264736f6c634300081a0033",
									".code": [
										{
											"begin": 63,
											"end": 381,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 381,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 381,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63,
											"end": 381,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 381,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 63,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 381,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 381,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 63,
											"end": 381,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 63,
											"end": 381,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 63,
											"end": 381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 381,
											"name": "PUSH",
											"source": 0,
											"value": "12E9B56D"
										},
										{
											"begin": 63,
											"end": 381,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 381,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 381,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63,
											"end": 381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 381,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 222,
											"end": 379,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 222,
											"end": 379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 222,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 222,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 222,
											"end": 379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 222,
											"end": 379,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 222,
											"end": 379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 222,
											"end": 379,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 222,
											"end": 379,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 222,
											"end": 379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 314,
											"end": 318,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 290,
											"end": 321,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 290,
											"end": 321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 277,
											"end": 286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 277,
											"end": 321,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 269,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 269,
											"end": 372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 269,
											"end": 372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 269,
											"end": 372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 269,
											"end": 372,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 269,
											"end": 372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 269,
											"end": 372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 269,
											"end": 372,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 269,
											"end": 372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 269,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 269,
											"end": 372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 269,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 269,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 269,
											"end": 372,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 269,
											"end": 372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 269,
											"end": 372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 269,
											"end": 372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 269,
											"end": 372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 269,
											"end": 372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 269,
											"end": 372,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 269,
											"end": 372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 269,
											"end": 372,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 269,
											"end": 372,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 269,
											"end": 372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 222,
											"end": 379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 176,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 91,
											"end": 102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 131,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 120,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 113,
											"end": 132,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 156,
											"end": 170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 141,
											"end": 170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 141,
											"end": 170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 182,
											"end": 415,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 182,
											"end": 415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 322,
											"end": 356,
											"name": "PUSH",
											"source": 1,
											"value": "6D73672E76616C75652073686F756C6420626520657175616C2074686520636F"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 306,
											"end": 320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 299,
											"end": 357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 391,
											"end": 407,
											"name": "PUSH",
											"source": 1,
											"value": "6E74726163742061646472657373000000000000000000000000000000000000"
										},
										{
											"begin": 386,
											"end": 388,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 378,
											"end": 384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 374,
											"end": 389,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 367,
											"end": 408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 182,
											"end": 415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 182,
											"end": 415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 421,
											"end": 787,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 421,
											"end": 787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 563,
											"end": 566,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 648,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 643,
											"end": 646,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 584,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 584,
											"end": 651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 584,
											"end": 651,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 584,
											"end": 651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 577,
											"end": 651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 577,
											"end": 651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 660,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 749,
											"end": 752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 660,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 660,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 660,
											"end": 753,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 660,
											"end": 753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 778,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 769,
											"end": 781,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 762,
											"end": 781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 762,
											"end": 781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 421,
											"end": 787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 421,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 421,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 421,
											"end": 787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 793,
											"end": 1212,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 793,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 959,
											"end": 963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 997,
											"end": 999,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 986,
											"end": 995,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 982,
											"end": 1000,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 974,
											"end": 1000,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 974,
											"end": 1000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1055,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1056,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1030,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1200,
											"end": 1204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1074,
											"end": 1205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1205,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1074,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 793,
											"end": 1212,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 793,
											"end": 1212,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 793,
											"end": 1212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 793,
											"end": 1212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"Typecast/src/Typecast.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"typeCast()": "12e9b56d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"typeCast\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"typeCast()\":{\"notice\":\"the goal of this exercise is to pass if msg.value is equal to the address of this contract or revert otherwise\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Typecast/src/Typecast.sol\":\"Typecast\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Typecast/src/Typecast.sol\":{\"keccak256\":\"0xe81b8a0eb35d08ecbd926828025d3481be506543264076554d488d0bb2e59eda\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e06cad878a46f4edc322da874afd9c67c61293a6bb959db458701cbce5da15b6\",\"dweb:/ipfs/QmUzf8NxADq48RZmMf2HuxMVpm4CufuJ82WXUyo7m3x4GG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"typeCast()": {
								"notice": "the goal of this exercise is to pass if msg.value is equal to the address of this contract or revert otherwise"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Typecast/src/Typecast.sol": {
				"ast": {
					"absolutePath": "Typecast/src/Typecast.sol",
					"exportedSymbols": {
						"Typecast": [
							24
						]
					},
					"id": 25,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Typecast",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 24,
							"linearizedBaseContracts": [
								24
							],
							"name": "Typecast",
							"nameLocation": "72:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "259:120:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 6,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "277:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 7,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "281:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "277:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 14,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "314:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_Typecast_$24",
																							"typeString": "contract Typecast"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_Typecast_$24",
																							"typeString": "contract Typecast"
																						}
																					],
																					"id": 13,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "306:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 12,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "306:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 15,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "306:13:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 11,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "298:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint160_$",
																				"typeString": "type(uint160)"
																			},
																			"typeName": {
																				"id": 10,
																				"name": "uint160",
																				"nodeType": "ElementaryTypeName",
																				"src": "298:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 16,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "298:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	],
																	"id": 9,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "290:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 8,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "290:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "290:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "277:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d73672e76616c75652073686f756c6420626520657175616c2074686520636f6e74726163742061646472657373",
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "323:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9031812611b01dc14ee1edb17ab8b09bf508fb80385d69ae69b7e95e3ff85078",
																"typeString": "literal_string \"msg.value should be equal the contract address\""
															},
															"value": "msg.value should be equal the contract address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9031812611b01dc14ee1edb17ab8b09bf508fb80385d69ae69b7e95e3ff85078",
																"typeString": "literal_string \"msg.value should be equal the contract address\""
															}
														],
														"id": 5,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "269:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "269:103:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "269:103:0"
											}
										]
									},
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "87:129:0",
										"text": " the goal of this exercise is to pass if msg.value is equal to the address of this contract or revert otherwise"
									},
									"functionSelector": "12e9b56d",
									"id": 23,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "typeCast",
									"nameLocation": "231:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "239:2:0"
									},
									"returnParameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "259:0:0"
									},
									"scope": 24,
									"src": "222:157:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 25,
							"src": "63:318:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:345:0"
				},
				"id": 0
			}
		}
	}
}