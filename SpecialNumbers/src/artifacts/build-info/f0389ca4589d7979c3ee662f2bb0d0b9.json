{
	"id": "f0389ca4589d7979c3ee662f2bb0d0b9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"SpecialNumbers/src/SpecialNumbers.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.13;\n\ncontract SpecialNumbers {\n    mapping(uint256 => bool) public isSpecial;\n\n    /**\n     * The goal is to use mappings and store if a number is special or not (using booleans)\n     */\n\n    /// make @param n special\n    function makeNumberSpecial(uint256 n) public {\n        isSpecial[n] = true;\n    }\n\n    /// make @param n not special\n    function makeNumberNotSpecial(uint256 n) public {\n        isSpecial[n] = false;\n    }\n\n    /// return if a number @param n is special or not\n    function isNumberSpecial(uint256 n) public view returns (bool) {\n        return isSpecial[n];\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"SpecialNumbers/src/SpecialNumbers.sol": {
				"SpecialNumbers": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "n",
									"type": "uint256"
								}
							],
							"name": "isNumberSpecial",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "isSpecial",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "n",
									"type": "uint256"
								}
							],
							"name": "makeNumberNotSpecial",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "n",
									"type": "uint256"
								}
							],
							"name": "makeNumberSpecial",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isNumberSpecial(uint256)": {
								"params": {
									"n": "is special or not"
								}
							},
							"makeNumberNotSpecial(uint256)": {
								"params": {
									"n": "not special"
								}
							},
							"makeNumberSpecial(uint256)": {
								"params": {
									"n": "special"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SpecialNumbers/src/SpecialNumbers.sol\":63:647  contract SpecialNumbers {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":63:647  contract SpecialNumbers {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x21e1fb57\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xbca3ec72\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xcba57e38\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xfa013715\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":401:486  function makeNumberNotSpecial(uint256 n) public {... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":546:645  function isNumberSpecial(uint256 n) public view returns (bool) {... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":93:134  mapping(uint256 => bool) public isSpecial */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_17:\n      tag_18\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":280:361  function makeNumberSpecial(uint256 n) public {... */\n    tag_6:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_21:\n      tag_22\n      jump\t// in\n    tag_20:\n      stop\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":401:486  function makeNumberNotSpecial(uint256 n) public {... */\n    tag_10:\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":474:479  false */\n      0x00\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":459:468  isSpecial */\n      dup1\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":459:471  isSpecial[n] */\n      0x00\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":469:470  n */\n      dup4\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":459:471  isSpecial[n] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":459:479  isSpecial[n] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":401:486  function makeNumberNotSpecial(uint256 n) public {... */\n      pop\n      jump\t// out\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":546:645  function isNumberSpecial(uint256 n) public view returns (bool) {... */\n    tag_13:\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":603:607  bool */\n      0x00\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":626:635  isSpecial */\n      dup1\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":626:638  isSpecial[n] */\n      0x00\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":636:637  n */\n      dup4\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":626:638  isSpecial[n] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":619:638  return isSpecial[n] */\n      swap1\n      pop\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":546:645  function isNumberSpecial(uint256 n) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":93:134  mapping(uint256 => bool) public isSpecial */\n    tag_18:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":280:361  function makeNumberSpecial(uint256 n) public {... */\n    tag_22:\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":350:354  true */\n      0x01\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":335:344  isSpecial */\n      0x00\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":335:347  isSpecial[n] */\n      dup1\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":345:346  n */\n      dup4\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":335:347  isSpecial[n] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":335:354  isSpecial[n] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"SpecialNumbers/src/SpecialNumbers.sol\":280:361  function makeNumberSpecial(uint256 n) public {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_27:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_29:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_30:\n        /* \"#utility.yul\":490:514   */\n      tag_40\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_29\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_41\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_41:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_31:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_43\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_30\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_9:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_45\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_46\n      tag_27\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":766:885   */\n    tag_45:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_47\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_31\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1115   */\n    tag_32:\n        /* \"#utility.yul\":1059:1066   */\n      0x00\n        /* \"#utility.yul\":1102:1107   */\n      dup2\n        /* \"#utility.yul\":1095:1108   */\n      iszero\n        /* \"#utility.yul\":1088:1109   */\n      iszero\n        /* \"#utility.yul\":1077:1109   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1121:1230   */\n    tag_33:\n        /* \"#utility.yul\":1202:1223   */\n      tag_50\n        /* \"#utility.yul\":1217:1222   */\n      dup2\n        /* \"#utility.yul\":1202:1223   */\n      tag_32\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1197:1200   */\n      dup3\n        /* \"#utility.yul\":1190:1224   */\n      mstore\n        /* \"#utility.yul\":1121:1230   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1236:1446   */\n    tag_15:\n        /* \"#utility.yul\":1323:1327   */\n      0x00\n        /* \"#utility.yul\":1361:1363   */\n      0x20\n        /* \"#utility.yul\":1350:1359   */\n      dup3\n        /* \"#utility.yul\":1346:1364   */\n      add\n        /* \"#utility.yul\":1338:1364   */\n      swap1\n      pop\n        /* \"#utility.yul\":1374:1439   */\n      tag_52\n        /* \"#utility.yul\":1436:1437   */\n      0x00\n        /* \"#utility.yul\":1425:1434   */\n      dup4\n        /* \"#utility.yul\":1421:1438   */\n      add\n        /* \"#utility.yul\":1412:1418   */\n      dup5\n        /* \"#utility.yul\":1374:1439   */\n      tag_33\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1236:1446   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202a6b8d1738d9f9d6a3d97e9f243e4da648b040943004fb5f74ea8934c4b164f564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506102478061001c5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c806321e1fb571461004e578063bca3ec721461006a578063cba57e381461009a578063fa013715146100ca575b5f80fd5b610068600480360381019061006391906101b3565b6100e6565b005b610084600480360381019061007f91906101b3565b610110565b60405161009191906101f8565b60405180910390f35b6100b460048036038101906100af91906101b3565b610135565b6040516100c191906101f8565b60405180910390f35b6100e460048036038101906100df91906101b3565b610151565b005b5f805f8381526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f805f8381526020019081526020015f205f9054906101000a900460ff169050919050565b5f602052805f5260405f205f915054906101000a900460ff1681565b60015f808381526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f80fd5b5f819050919050565b61019281610180565b811461019c575f80fd5b50565b5f813590506101ad81610189565b92915050565b5f602082840312156101c8576101c761017c565b5b5f6101d58482850161019f565b91505092915050565b5f8115159050919050565b6101f2816101de565b82525050565b5f60208201905061020b5f8301846101e9565b9291505056fea26469706673582212202a6b8d1738d9f9d6a3d97e9f243e4da648b040943004fb5f74ea8934c4b164f564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x247 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x21E1FB57 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0xBCA3EC72 EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0xCBA57E38 EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xFA013715 EQ PUSH2 0xCA JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x1B3 JUMP JUMPDEST PUSH2 0xE6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x84 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x1B3 JUMP JUMPDEST PUSH2 0x110 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91 SWAP2 SWAP1 PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x1B3 JUMP JUMPDEST PUSH2 0x135 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x1B3 JUMP JUMPDEST PUSH2 0x151 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x192 DUP2 PUSH2 0x180 JUMP JUMPDEST DUP2 EQ PUSH2 0x19C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AD DUP2 PUSH2 0x189 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C8 JUMPI PUSH2 0x1C7 PUSH2 0x17C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D5 DUP5 DUP3 DUP6 ADD PUSH2 0x19F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F2 DUP2 PUSH2 0x1DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20B PUSH0 DUP4 ADD DUP5 PUSH2 0x1E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A PUSH12 0x8D1738D9F9D6A3D97E9F243E 0x4D 0xA6 BASEFEE 0xB0 BLOCKHASH SWAP5 ADDRESS DIV 0xFB PUSH0 PUSH21 0xEA8934C4B164F564736F6C634300081A0033000000 ",
							"sourceMap": "63:584:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@isNumberSpecial_44": {
									"entryPoint": 272,
									"id": 44,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isSpecial_5": {
									"entryPoint": 309,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@makeNumberNotSpecial_31": {
									"entryPoint": 230,
									"id": 31,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@makeNumberSpecial_18": {
									"entryPoint": 337,
									"id": 18,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 504,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 380,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1449:1",
										"nodeType": "YulBlock",
										"src": "0:1449:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:32:1",
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nativeSrc": "389:16:1",
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:1",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nativeSrc": "460:79:1",
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:1",
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:1",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:1",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nativeSrc": "519:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nativeSrc": "519:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nativeSrc": "490:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nativeSrc": "480:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nativeSrc": "473:43:1",
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nativeSrc": "470:63:1",
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:1",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nativeSrc": "597:87:1",
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nativeSrc": "607:29:1",
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nativeSrc": "616:20:1",
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nativeSrc": "645:33:1",
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nativeSrc": "645:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:1",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:1",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:1",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nativeSrc": "756:263:1",
													"nodeType": "YulBlock",
													"src": "756:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:1",
																"nodeType": "YulBlock",
																"src": "802:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:1"
																			},
																			"nativeSrc": "804:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:1"
																		},
																		"nativeSrc": "804:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nativeSrc": "773:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:1",
																		"nodeType": "YulLiteral",
																		"src": "798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nativeSrc": "769:32:1",
																"nodeType": "YulFunctionCall",
																"src": "769:32:1"
															},
															"nativeSrc": "766:119:1",
															"nodeType": "YulIf",
															"src": "766:119:1"
														},
														{
															"nativeSrc": "895:117:1",
															"nodeType": "YulBlock",
															"src": "895:117:1",
															"statements": [
																{
																	"nativeSrc": "910:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:1",
																		"nodeType": "YulLiteral",
																		"src": "924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:1",
																			"nodeType": "YulTypedName",
																			"src": "914:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:1",
																	"nodeType": "YulAssignment",
																	"src": "939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:1"
																				},
																				"nativeSrc": "970:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:1"
																		},
																		"nativeSrc": "949:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:1",
														"nodeType": "YulTypedName",
														"src": "726:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:1",
														"nodeType": "YulTypedName",
														"src": "737:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:1",
														"nodeType": "YulTypedName",
														"src": "749:6:1",
														"type": ""
													}
												],
												"src": "690:329:1"
											},
											{
												"body": {
													"nativeSrc": "1067:48:1",
													"nodeType": "YulBlock",
													"src": "1067:48:1",
													"statements": [
														{
															"nativeSrc": "1077:32:1",
															"nodeType": "YulAssignment",
															"src": "1077:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1102:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1102:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1095:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1095:6:1"
																		},
																		"nativeSrc": "1095:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1095:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1088:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1088:6:1"
																},
																"nativeSrc": "1088:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1088:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1077:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1077:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1025:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1049:5:1",
														"nodeType": "YulTypedName",
														"src": "1049:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1059:7:1",
														"nodeType": "YulTypedName",
														"src": "1059:7:1",
														"type": ""
													}
												],
												"src": "1025:90:1"
											},
											{
												"body": {
													"nativeSrc": "1180:50:1",
													"nodeType": "YulBlock",
													"src": "1180:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1197:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1197:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1217:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1217:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1202:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "1202:14:1"
																		},
																		"nativeSrc": "1202:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1202:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1190:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1190:6:1"
																},
																"nativeSrc": "1190:34:1",
																"nodeType": "YulFunctionCall",
																"src": "1190:34:1"
															},
															"nativeSrc": "1190:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "1190:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1121:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1168:5:1",
														"nodeType": "YulTypedName",
														"src": "1168:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1175:3:1",
														"nodeType": "YulTypedName",
														"src": "1175:3:1",
														"type": ""
													}
												],
												"src": "1121:109:1"
											},
											{
												"body": {
													"nativeSrc": "1328:118:1",
													"nodeType": "YulBlock",
													"src": "1328:118:1",
													"statements": [
														{
															"nativeSrc": "1338:26:1",
															"nodeType": "YulAssignment",
															"src": "1338:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1350:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1350:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1361:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1361:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1346:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1346:3:1"
																},
																"nativeSrc": "1346:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1346:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1338:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1338:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1412:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1412:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1425:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1425:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1436:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1436:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1421:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1421:3:1"
																		},
																		"nativeSrc": "1421:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1421:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1374:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "1374:37:1"
																},
																"nativeSrc": "1374:65:1",
																"nodeType": "YulFunctionCall",
																"src": "1374:65:1"
															},
															"nativeSrc": "1374:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "1374:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1236:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1300:9:1",
														"nodeType": "YulTypedName",
														"src": "1300:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1312:6:1",
														"nodeType": "YulTypedName",
														"src": "1312:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1323:4:1",
														"nodeType": "YulTypedName",
														"src": "1323:4:1",
														"type": ""
													}
												],
												"src": "1236:210:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c806321e1fb571461004e578063bca3ec721461006a578063cba57e381461009a578063fa013715146100ca575b5f80fd5b610068600480360381019061006391906101b3565b6100e6565b005b610084600480360381019061007f91906101b3565b610110565b60405161009191906101f8565b60405180910390f35b6100b460048036038101906100af91906101b3565b610135565b6040516100c191906101f8565b60405180910390f35b6100e460048036038101906100df91906101b3565b610151565b005b5f805f8381526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f805f8381526020019081526020015f205f9054906101000a900460ff169050919050565b5f602052805f5260405f205f915054906101000a900460ff1681565b60015f808381526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f80fd5b5f819050919050565b61019281610180565b811461019c575f80fd5b50565b5f813590506101ad81610189565b92915050565b5f602082840312156101c8576101c761017c565b5b5f6101d58482850161019f565b91505092915050565b5f8115159050919050565b6101f2816101de565b82525050565b5f60208201905061020b5f8301846101e9565b9291505056fea26469706673582212202a6b8d1738d9f9d6a3d97e9f243e4da648b040943004fb5f74ea8934c4b164f564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x21E1FB57 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0xBCA3EC72 EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0xCBA57E38 EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xFA013715 EQ PUSH2 0xCA JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x1B3 JUMP JUMPDEST PUSH2 0xE6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x84 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x1B3 JUMP JUMPDEST PUSH2 0x110 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91 SWAP2 SWAP1 PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x1B3 JUMP JUMPDEST PUSH2 0x135 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x1B3 JUMP JUMPDEST PUSH2 0x151 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x192 DUP2 PUSH2 0x180 JUMP JUMPDEST DUP2 EQ PUSH2 0x19C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AD DUP2 PUSH2 0x189 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C8 JUMPI PUSH2 0x1C7 PUSH2 0x17C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D5 DUP5 DUP3 DUP6 ADD PUSH2 0x19F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F2 DUP2 PUSH2 0x1DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20B PUSH0 DUP4 ADD DUP5 PUSH2 0x1E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A PUSH12 0x8D1738D9F9D6A3D97E9F243E 0x4D 0xA6 BASEFEE 0xB0 BLOCKHASH SWAP5 ADDRESS DIV 0xFB PUSH0 PUSH21 0xEA8934C4B164F564736F6C634300081A0033000000 ",
							"sourceMap": "63:584:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;401:85;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;546:99;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;93:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;280:81;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;401:85;474:5;459:9;:12;469:1;459:12;;;;;;;;;;;;:20;;;;;;;;;;;;;;;;;;401:85;:::o;546:99::-;603:4;626:9;:12;636:1;626:12;;;;;;;;;;;;;;;;;;;;;619:19;;546:99;;;:::o;93:41::-;;;;;;;;;;;;;;;;;;;;;;:::o;280:81::-;350:4;335:9;:12;345:1;335:12;;;;;;;;;;;;:19;;;;;;;;;;;;;;;;;;280:81;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:90::-;1059:7;1102:5;1095:13;1088:21;1077:32;;1025:90;;;:::o;1121:109::-;1202:21;1217:5;1202:21;:::i;:::-;1197:3;1190:34;1121:109;;:::o;1236:210::-;1323:4;1361:2;1350:9;1346:18;1338:26;;1374:65;1436:1;1425:9;1421:17;1412:6;1374:65;:::i;:::-;1236:210;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "116600",
								"executionCost": "163",
								"totalCost": "116763"
							},
							"external": {
								"isNumberSpecial(uint256)": "2810",
								"isSpecial(uint256)": "2806",
								"makeNumberNotSpecial(uint256)": "24720",
								"makeNumberSpecial(uint256)": "24787"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 647,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 63,
									"end": 647,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 63,
									"end": 647,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 63,
									"end": 647,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 63,
									"end": 647,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 647,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 63,
									"end": 647,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 647,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 63,
									"end": 647,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 647,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 647,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 63,
									"end": 647,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 647,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 63,
									"end": 647,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63,
									"end": 647,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 647,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 647,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 647,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 647,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 63,
									"end": 647,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 647,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202a6b8d1738d9f9d6a3d97e9f243e4da648b040943004fb5f74ea8934c4b164f564736f6c634300081a0033",
									".code": [
										{
											"begin": 63,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 647,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 647,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 63,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 647,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 63,
											"end": 647,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63,
											"end": 647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63,
											"end": 647,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 647,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 63,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 647,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 63,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 63,
											"end": 647,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 63,
											"end": 647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "21E1FB57"
										},
										{
											"begin": 63,
											"end": 647,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 63,
											"end": 647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "BCA3EC72"
										},
										{
											"begin": 63,
											"end": 647,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63,
											"end": 647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "CBA57E38"
										},
										{
											"begin": 63,
											"end": 647,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 63,
											"end": 647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "FA013715"
										},
										{
											"begin": 63,
											"end": 647,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 63,
											"end": 647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 647,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 647,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 401,
											"end": 486,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 401,
											"end": 486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 401,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 401,
											"end": 486,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 401,
											"end": 486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 486,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 401,
											"end": 486,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 401,
											"end": 486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 486,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 401,
											"end": 486,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 401,
											"end": 486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 486,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 401,
											"end": 486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 401,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 401,
											"end": 486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 486,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 401,
											"end": 486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 401,
											"end": 486,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 546,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 546,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 546,
											"end": 645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 546,
											"end": 645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 546,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 546,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 546,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 546,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 546,
											"end": 645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 546,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 546,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 93,
											"end": 134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 93,
											"end": 134,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 93,
											"end": 134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 93,
											"end": 134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 93,
											"end": 134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 93,
											"end": 134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 93,
											"end": 134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 93,
											"end": 134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 93,
											"end": 134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 93,
											"end": 134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 93,
											"end": 134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 280,
											"end": 361,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 280,
											"end": 361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 280,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 280,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 280,
											"end": 361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 280,
											"end": 361,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 280,
											"end": 361,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 280,
											"end": 361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 280,
											"end": 361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 280,
											"end": 361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 280,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 280,
											"end": 361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 280,
											"end": 361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 280,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 280,
											"end": 361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 280,
											"end": 361,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 280,
											"end": 361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 280,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 280,
											"end": 361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 280,
											"end": 361,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 280,
											"end": 361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 280,
											"end": 361,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 486,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 401,
											"end": 486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 474,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 459,
											"end": 471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 470,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 459,
											"end": 471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 459,
											"end": 471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 459,
											"end": 471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 459,
											"end": 471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 459,
											"end": 471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 459,
											"end": 471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 459,
											"end": 471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 459,
											"end": 471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 459,
											"end": 471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 459,
											"end": 471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 471,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 459,
											"end": 471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 459,
											"end": 479,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 459,
											"end": 479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 459,
											"end": 479,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 459,
											"end": 479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 459,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 459,
											"end": 479,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 459,
											"end": 479,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 459,
											"end": 479,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 459,
											"end": 479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 459,
											"end": 479,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 459,
											"end": 479,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 459,
											"end": 479,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 459,
											"end": 479,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 459,
											"end": 479,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 459,
											"end": 479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 459,
											"end": 479,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 459,
											"end": 479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 486,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 546,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 603,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 637,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 626,
											"end": 638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 626,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 626,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 638,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 626,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 638,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 626,
											"end": 638,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 638,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 626,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 626,
											"end": 638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 619,
											"end": 638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 619,
											"end": 638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 546,
											"end": 645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 93,
											"end": 134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 134,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 93,
											"end": 134,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 134,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 134,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 93,
											"end": 134,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 93,
											"end": 134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 93,
											"end": 134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 280,
											"end": 361,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 280,
											"end": 361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 350,
											"end": 354,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 335,
											"end": 344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 345,
											"end": 346,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 335,
											"end": 347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 335,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 335,
											"end": 347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 335,
											"end": 347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 335,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 335,
											"end": 347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 335,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 347,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 335,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 354,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 335,
											"end": 354,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 335,
											"end": 354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 335,
											"end": 354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 354,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 335,
											"end": 354,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 335,
											"end": 354,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 335,
											"end": 354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 335,
											"end": 354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 354,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 335,
											"end": 354,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 335,
											"end": 354,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 335,
											"end": 354,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 335,
											"end": 354,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 335,
											"end": 354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 354,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 335,
											"end": 354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 280,
											"end": 361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 280,
											"end": 361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1066,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1108,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1109,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1217,
											"end": 1222,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1202,
											"end": 1223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1200,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1361,
											"end": 1363,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1364,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1436,
											"end": 1437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1425,
											"end": 1434,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1421,
											"end": 1438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1418,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1374,
											"end": 1439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"SpecialNumbers/src/SpecialNumbers.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"isNumberSpecial(uint256)": "bca3ec72",
							"isSpecial(uint256)": "cba57e38",
							"makeNumberNotSpecial(uint256)": "21e1fb57",
							"makeNumberSpecial(uint256)": "fa013715"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"isNumberSpecial\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"isSpecial\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"makeNumberNotSpecial\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"makeNumberSpecial\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isNumberSpecial(uint256)\":{\"params\":{\"n\":\"is special or not\"}},\"makeNumberNotSpecial(uint256)\":{\"params\":{\"n\":\"not special\"}},\"makeNumberSpecial(uint256)\":{\"params\":{\"n\":\"special\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SpecialNumbers/src/SpecialNumbers.sol\":\"SpecialNumbers\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SpecialNumbers/src/SpecialNumbers.sol\":{\"keccak256\":\"0x157a1cd0ab3bcf7f2cf19e5f69dea750799d172b60f8ffc5022fe60a85fbdfde\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://72e08962411deb7cd0ff676278a41fa178e37d75b910023c0e3254d0bc6dfa9e\",\"dweb:/ipfs/QmaEKtwVfhKADYTWNR2BG5MKydsFRxrvUfN6Ru8PJCNKeZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "SpecialNumbers/src/SpecialNumbers.sol:SpecialNumbers",
								"label": "isSpecial",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_bool)"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"SpecialNumbers/src/SpecialNumbers.sol": {
				"ast": {
					"absolutePath": "SpecialNumbers/src/SpecialNumbers.sol",
					"exportedSymbols": {
						"SpecialNumbers": [
							45
						]
					},
					"id": 46,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SpecialNumbers",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "SpecialNumbers",
							"nameLocation": "72:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "cba57e38",
									"id": 5,
									"mutability": "mutable",
									"name": "isSpecial",
									"nameLocation": "125:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 45,
									"src": "93:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
										"typeString": "mapping(uint256 => bool)"
									},
									"typeName": {
										"id": 4,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "101:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "93:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
											"typeString": "mapping(uint256 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "112:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "325:36:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 11,
															"name": "isSpecial",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "335:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 13,
														"indexExpression": {
															"id": 12,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "345:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "335:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "350:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "335:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "335:19:0"
											}
										]
									},
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "250:25:0",
										"text": "make @param n special"
									},
									"functionSelector": "fa013715",
									"id": 18,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "makeNumberSpecial",
									"nameLocation": "289:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "315:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "307:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:11:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "325:0:0"
									},
									"scope": 45,
									"src": "280:81:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "449:37:0",
										"statements": [
											{
												"expression": {
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 24,
															"name": "isSpecial",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "459:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 26,
														"indexExpression": {
															"id": 25,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "469:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "459:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "474:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "459:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "459:20:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "367:29:0",
										"text": "make @param n not special"
									},
									"functionSelector": "21e1fb57",
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "makeNumberNotSpecial",
									"nameLocation": "410:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "439:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "431:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:11:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "449:0:0"
									},
									"scope": 45,
									"src": "401:85:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "609:36:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 39,
														"name": "isSpecial",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "626:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
															"typeString": "mapping(uint256 => bool)"
														}
													},
													"id": 41,
													"indexExpression": {
														"id": 40,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "636:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "626:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 38,
												"id": 42,
												"nodeType": "Return",
												"src": "619:19:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "492:49:0",
										"text": "return if a number @param n is special or not"
									},
									"functionSelector": "bca3ec72",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isNumberSpecial",
									"nameLocation": "555:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "579:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "571:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "570:11:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "603:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 36,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "603:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "602:6:0"
									},
									"scope": 45,
									"src": "546:99:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 46,
							"src": "63:584:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:611:0"
				},
				"id": 0
			}
		}
	}
}